MPASM 03.60.02 Released                             PROVA.ASM   1-26-2005  19:42:01         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 
                      00002 ; PicBasic Pro Compiler 2.44, (c) 1998, 2003 microEngineering Labs, Inc. All Rights Reserved. 
  00000001            00003 _USED                   EQU     1
                      00004 
                      00005         INCLUDE "C:\PROGRA~1\PBP\18F4320.INC"
                      00001 ;****************************************************************
                      00002 ;*  18F4320.INC                                                 *
                      00003 ;*                                                              *
                      00004 ;*  By        : Leonard Zerman, Jeff Schmoyer                   *
                      00005 ;*  Notice    : Copyright (c) 2002 microEngineering Labs, Inc.  *
                      00006 ;*              All Rights Reserved                             *
                      00007 ;*  Date      : 11/15/02                                        *
                      00008 ;*  Version   : 2.43                                            *
                      00009 ;*  Notes     :                                                 *
                      00010 ;****************************************************************
                      00017         LIST
                      00018         LIST p = 18F4320, r = dec, w = -302, f = inhx32
                      00019         INCLUDE "P18F4320.INC"  ; MPASM  Header
                      00001         LIST
                      00002 ; P18F4320.INC  Standard Header File, Version 1.0   Microchip Technology, Inc.
                      00933         LIST
300000 F1FF           00020         __CONFIG    _CONFIG1H, _XT_OSC_1H
                      00021         __CONFIG    _CONFIG2L, _BOR_ON_2L & _BORV_20_2L & _PWRT_ON_2L
300002 EFFE           00022         __CONFIG    _CONFIG2H, _WDT_ON_2H & _WDTPS_128_2H
300004 FFFF           00023         __CONFIG    _CONFIG3H, _MCLRE_ON_3H & _CCP2MX_ON_3H
300006 FFFB           00024         __CONFIG    _CONFIG4L, _STVR_ON_4L & _LVP_OFF_4L & _DEBUG_OFF_4L
                      00027         LIST
  00F00000            00028 EEPROM_START    EQU     0F00000h
  00000008            00029 BLOCK_SIZE      EQU     8
                      00030 
                      00006 
                      00007 
                      00008 ; Define statements.
                      00009 #define         OSC              20
                      00010 
  00000000            00011 RAM_START                       EQU     00000h
  000001FF            00012 RAM_END                         EQU     001FFh
  00000002            00013 RAM_BANKS                       EQU     00002h
  00000080            00014 BANK0_START                     EQU     00080h
  000000FF            00015 BANK0_END                       EQU     000FFh
  00000100            00016 BANK1_START                     EQU     00100h
  000001FF            00017 BANK1_END                       EQU     001FFh
  00000000            00018 BANKA_START                     EQU     00000h
  0000007F            00019 BANKA_END                       EQU     0007Fh
                      00020 
  00000000            00021 R0                              EQU     RAM_START + 000h
  00000002            00022 R1                              EQU     RAM_START + 002h
  00000004            00023 R2                              EQU     RAM_START + 004h
  00000006            00024 R3                              EQU     RAM_START + 006h
  00000008            00025 R4                              EQU     RAM_START + 008h
  0000000A            00026 R5                              EQU     RAM_START + 00Ah
  0000000C            00027 R6                              EQU     RAM_START + 00Ch
  0000000E            00028 R7                              EQU     RAM_START + 00Eh
MPASM 03.60.02 Released                             PROVA.ASM   1-26-2005  19:42:01         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000010            00029 R8                              EQU     RAM_START + 010h
  00000012            00030 FLAGS                           EQU     RAM_START + 012h
  00000013            00031 GOP                             EQU     RAM_START + 013h
  00000014            00032 RM1                             EQU     RAM_START + 014h
  00000015            00033 RM2                             EQU     RAM_START + 015h
  00000016            00034 RR1                             EQU     RAM_START + 016h
  00000017            00035 RR2                             EQU     RAM_START + 017h
  00000018            00036 RS1                             EQU     RAM_START + 018h
  00000019            00037 RS2                             EQU     RAM_START + 019h
  0000001A            00038 _CONTA                          EQU     RAM_START + 01Ah
  0000001B            00039 _TEMP                           EQU     RAM_START + 01Bh
  00000F81            00040 _PORTL                          EQU      PORTB
  00000F82            00041 _PORTH                          EQU      PORTC
  00000F93            00042 _TRISL                          EQU      TRISB
  00000F94            00043 _TRISH                          EQU      TRISC
                      00044 #define _PORTA_0                 PORTA, 000h
                      00045 #define _PORTA_1                 PORTA, 001h
                      00046 #define _PORTA_2                 PORTA, 002h
                      00047 #define _PORTA_3                 PORTA, 003h
                      00048 #define _PORTA_5                 PORTA, 005h
                      00049 #define _PORTB_0                 PORTB, 000h
                      00050 #define _PORTB_1                 PORTB, 001h
                      00051 #define _PORTB_2                 PORTB, 002h
                      00052 #define _PORTB_3                 PORTB, 003h
                      00053 #define _PORTB_4                 PORTB, 004h
                      00054 #define _PORTB_5                 PORTB, 005h
                      00055 #define _PORTB_6                 PORTB, 006h
                      00056 #define _PORTB_7                 PORTB, 007h
                      00057 #define _PORTC_0                 PORTC, 000h
                      00058 #define _PORTC_1                 PORTC, 001h
                      00059 #define _PORTC_2                 PORTC, 002h
                      00060 #define _PORTC_3                 PORTC, 003h
                      00061 #define _PORTC_4                 PORTC, 004h
                      00062 #define _PORTC_5                 PORTC, 005h
                      00063 #define _PORTC_6                 PORTC, 006h
                      00064 #define _PORTC_7                 PORTC, 007h
                      00065 #define _PORTD_0                 PORTD, 000h
                      00066 #define _PORTD_1                 PORTD, 001h
                      00067 #define _PORTD_2                 PORTD, 002h
                      00068 #define _PORTD_3                 PORTD, 003h
                      00069 #define _PORTD_4                 PORTD, 004h
                      00070 #define _PORTD_5                 PORTD, 005h
                      00071 #define _PORTD_6                 PORTD, 006h
                      00072 #define _PORTD_7                 PORTD, 007h
                      00073 #define _PORTE_0                 PORTE, 000h
                      00074 #define _PORTE_1                 PORTE, 001h
                      00075 #define _PORTE_2                 PORTE, 002h
Error[105]  : Cannot open file (Include File "T18F4320.MAC" not found)
                      00076         INCLUDE "T18F4320.MAC"
                      00077         INCLUDE "C:\PROGRA~1\PBP\PBPPIC18.LIB"
                      00001 ;******************************************************************
                      00002 ;*  PBPPIC18.LIB                                                  *
                      00003 ;*                                                                *
MPASM 03.60.02 Released                             PROVA.ASM   1-26-2005  19:42:01         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00004 ;*  By        : Leonard Zerman, Jeff Schmoyer                     *
                      00005 ;*  Notice    : Copyright (c) 2003 microEngineering Labs, Inc.    *
                      00006 ;*              All Rights Reserved                               *
                      00007 ;*  Date      : 07/08/03                                          *
                      00008 ;*  Version   : 2.44                                              *
                      00009 ;*  Notes     :                                                   *
                      00010 ;******************************************************************
                      00091   LIST
                      00092 ; Oscillator is 20MHz
                      01171   LIST
000000                01172     ORG 0                       ; Reset vector at 0
                      01181   LIST
000000 EF02 F000      01182         goto    INIT            ; Finish initialization
                      07667   LIST
000004                07668 INIT
                      07700   LIST
000004                07701 main
                      00078 
                      00079         MOVE?CB 000h, TRISA
                          M         CHK?RP  TRISA
                          M     if (((TRISA) > BANKA_END) & ((TRISA) < 0f80h))
                          M       if (((TRISA) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (TRISA) >> 8
                          M PREV_BANK = (TRISA) >> 8
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
000004 6A92               M         clrf    TRISA
                          M     else
                          M         movlw   low (000h)
                          M         movwf   TRISA
                          M     endif
                      00080         MOVE?CB 000h, TRISB
                          M         CHK?RP  TRISB
                          M     if (((TRISB) > BANKA_END) & ((TRISB) < 0f80h))
                          M       if (((TRISB) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (TRISB) >> 8
                          M PREV_BANK = (TRISB) >> 8
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
000006 6A93               M         clrf    TRISB
                          M     else
                          M         movlw   low (000h)
                          M         movwf   TRISB
                          M     endif
                      00081         MOVE?CB 000h, TRISC
                          M         CHK?RP  TRISC
                          M     if (((TRISC) > BANKA_END) & ((TRISC) < 0f80h))
                          M       if (((TRISC) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (TRISC) >> 8
                          M PREV_BANK = (TRISC) >> 8
                          M       endif
MPASM 03.60.02 Released                             PROVA.ASM   1-26-2005  19:42:01         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if (low (000h) == 0)
000008 6A94               M         clrf    TRISC
                          M     else
                          M         movlw   low (000h)
                          M         movwf   TRISC
                          M     endif
                      00082         MOVE?CB 000h, TRISD
                          M         CHK?RP  TRISD
                          M     if (((TRISD) > BANKA_END) & ((TRISD) < 0f80h))
                          M       if (((TRISD) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (TRISD) >> 8
                          M PREV_BANK = (TRISD) >> 8
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
00000A 6A95               M         clrf    TRISD
                          M     else
                          M         movlw   low (000h)
                          M         movwf   TRISD
                          M     endif
                      00083         MOVE?CB 000h, TRISE
                          M         CHK?RP  TRISE
                          M     if (((TRISE) > BANKA_END) & ((TRISE) < 0f80h))
                          M       if (((TRISE) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (TRISE) >> 8
                          M PREV_BANK = (TRISE) >> 8
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
00000C 6A96               M         clrf    TRISE
                          M     else
                          M         movlw   low (000h)
                          M         movwf   TRISE
                          M     endif
                      00084         MOVE?CT 000h, _PORTA_0
                          M         CHK?RP  PORTA
                          M     if (((PORTA) > BANKA_END) & ((PORTA) < 0f80h))
                          M       if (((PORTA) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (PORTA) >> 8
                          M PREV_BANK = (PORTA) >> 8
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PORTA,  000h
                          M     else
00000E 9080               M         bcf     PORTA,  000h
                          M     endif
                      00085         MOVE?CT 000h, _PORTA_1
                          M         CHK?RP  PORTA
                          M     if (((PORTA) > BANKA_END) & ((PORTA) < 0f80h))
                          M       if (((PORTA) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (PORTA) >> 8
MPASM 03.60.02 Released                             PROVA.ASM   1-26-2005  19:42:01         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = (PORTA) >> 8
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PORTA,  001h
                          M     else
000010 9280               M         bcf     PORTA,  001h
                          M     endif
                      00086         MOVE?CT 000h, _PORTA_2
                          M         CHK?RP  PORTA
                          M     if (((PORTA) > BANKA_END) & ((PORTA) < 0f80h))
                          M       if (((PORTA) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (PORTA) >> 8
                          M PREV_BANK = (PORTA) >> 8
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PORTA,  002h
                          M     else
000012 9480               M         bcf     PORTA,  002h
                          M     endif
                      00087         MOVE?CT 000h, _PORTA_3
                          M         CHK?RP  PORTA
                          M     if (((PORTA) > BANKA_END) & ((PORTA) < 0f80h))
                          M       if (((PORTA) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (PORTA) >> 8
                          M PREV_BANK = (PORTA) >> 8
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PORTA,  003h
                          M     else
000014 9680               M         bcf     PORTA,  003h
                          M     endif
                      00088         MOVE?CT 000h, _PORTA_5
                          M         CHK?RP  PORTA
                          M     if (((PORTA) > BANKA_END) & ((PORTA) < 0f80h))
                          M       if (((PORTA) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (PORTA) >> 8
                          M PREV_BANK = (PORTA) >> 8
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PORTA,  005h
                          M     else
000016 9A80               M         bcf     PORTA,  005h
                          M     endif
                      00089         MOVE?CT 000h, _PORTB_0
                          M         CHK?RP  PORTB
                          M     if (((PORTB) > BANKA_END) & ((PORTB) < 0f80h))
                          M       if (((PORTB) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (PORTB) >> 8
                          M PREV_BANK = (PORTB) >> 8
MPASM 03.60.02 Released                             PROVA.ASM   1-26-2005  19:42:01         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PORTB,  000h
                          M     else
000018 9081               M         bcf     PORTB,  000h
                          M     endif
                      00090         MOVE?CT 000h, _PORTB_1
                          M         CHK?RP  PORTB
                          M     if (((PORTB) > BANKA_END) & ((PORTB) < 0f80h))
                          M       if (((PORTB) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (PORTB) >> 8
                          M PREV_BANK = (PORTB) >> 8
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PORTB,  001h
                          M     else
00001A 9281               M         bcf     PORTB,  001h
                          M     endif
                      00091         MOVE?CT 000h, _PORTB_2
                          M         CHK?RP  PORTB
                          M     if (((PORTB) > BANKA_END) & ((PORTB) < 0f80h))
                          M       if (((PORTB) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (PORTB) >> 8
                          M PREV_BANK = (PORTB) >> 8
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PORTB,  002h
                          M     else
00001C 9481               M         bcf     PORTB,  002h
                          M     endif
                      00092         MOVE?CT 000h, _PORTB_3
                          M         CHK?RP  PORTB
                          M     if (((PORTB) > BANKA_END) & ((PORTB) < 0f80h))
                          M       if (((PORTB) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (PORTB) >> 8
                          M PREV_BANK = (PORTB) >> 8
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PORTB,  003h
                          M     else
00001E 9681               M         bcf     PORTB,  003h
                          M     endif
                      00093         MOVE?CT 000h, _PORTB_4
                          M         CHK?RP  PORTB
                          M     if (((PORTB) > BANKA_END) & ((PORTB) < 0f80h))
                          M       if (((PORTB) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (PORTB) >> 8
                          M PREV_BANK = (PORTB) >> 8
                          M       endif
MPASM 03.60.02 Released                             PROVA.ASM   1-26-2005  19:42:01         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PORTB,  004h
                          M     else
000020 9881               M         bcf     PORTB,  004h
                          M     endif
                      00094         MOVE?CT 000h, _PORTB_5
                          M         CHK?RP  PORTB
                          M     if (((PORTB) > BANKA_END) & ((PORTB) < 0f80h))
                          M       if (((PORTB) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (PORTB) >> 8
                          M PREV_BANK = (PORTB) >> 8
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PORTB,  005h
                          M     else
000022 9A81               M         bcf     PORTB,  005h
                          M     endif
                      00095         MOVE?CT 000h, _PORTB_6
                          M         CHK?RP  PORTB
                          M     if (((PORTB) > BANKA_END) & ((PORTB) < 0f80h))
                          M       if (((PORTB) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (PORTB) >> 8
                          M PREV_BANK = (PORTB) >> 8
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PORTB,  006h
                          M     else
000024 9C81               M         bcf     PORTB,  006h
                          M     endif
                      00096         MOVE?CT 000h, _PORTB_7
                          M         CHK?RP  PORTB
                          M     if (((PORTB) > BANKA_END) & ((PORTB) < 0f80h))
                          M       if (((PORTB) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (PORTB) >> 8
                          M PREV_BANK = (PORTB) >> 8
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PORTB,  007h
                          M     else
000026 9E81               M         bcf     PORTB,  007h
                          M     endif
                      00097         MOVE?CT 000h, _PORTC_0
                          M         CHK?RP  PORTC
                          M     if (((PORTC) > BANKA_END) & ((PORTC) < 0f80h))
                          M       if (((PORTC) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (PORTC) >> 8
                          M PREV_BANK = (PORTC) >> 8
                          M       endif
                          M     endif
MPASM 03.60.02 Released                             PROVA.ASM   1-26-2005  19:42:01         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (((000h) & 1) == 1)
                          M         bsf     PORTC,  000h
                          M     else
000028 9082               M         bcf     PORTC,  000h
                          M     endif
                      00098         MOVE?CT 000h, _PORTC_1
                          M         CHK?RP  PORTC
                          M     if (((PORTC) > BANKA_END) & ((PORTC) < 0f80h))
                          M       if (((PORTC) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (PORTC) >> 8
                          M PREV_BANK = (PORTC) >> 8
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PORTC,  001h
                          M     else
00002A 9282               M         bcf     PORTC,  001h
                          M     endif
                      00099         MOVE?CT 000h, _PORTC_2
                          M         CHK?RP  PORTC
                          M     if (((PORTC) > BANKA_END) & ((PORTC) < 0f80h))
                          M       if (((PORTC) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (PORTC) >> 8
                          M PREV_BANK = (PORTC) >> 8
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PORTC,  002h
                          M     else
00002C 9482               M         bcf     PORTC,  002h
                          M     endif
                      00100         MOVE?CT 000h, _PORTC_3
                          M         CHK?RP  PORTC
                          M     if (((PORTC) > BANKA_END) & ((PORTC) < 0f80h))
                          M       if (((PORTC) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (PORTC) >> 8
                          M PREV_BANK = (PORTC) >> 8
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PORTC,  003h
                          M     else
00002E 9682               M         bcf     PORTC,  003h
                          M     endif
                      00101         MOVE?CT 000h, _PORTC_4
                          M         CHK?RP  PORTC
                          M     if (((PORTC) > BANKA_END) & ((PORTC) < 0f80h))
                          M       if (((PORTC) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (PORTC) >> 8
                          M PREV_BANK = (PORTC) >> 8
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
MPASM 03.60.02 Released                             PROVA.ASM   1-26-2005  19:42:01         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bsf     PORTC,  004h
                          M     else
000030 9882               M         bcf     PORTC,  004h
                          M     endif
                      00102         MOVE?CT 000h, _PORTC_5
                          M         CHK?RP  PORTC
                          M     if (((PORTC) > BANKA_END) & ((PORTC) < 0f80h))
                          M       if (((PORTC) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (PORTC) >> 8
                          M PREV_BANK = (PORTC) >> 8
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PORTC,  005h
                          M     else
000032 9A82               M         bcf     PORTC,  005h
                          M     endif
                      00103         MOVE?CT 000h, _PORTC_6
                          M         CHK?RP  PORTC
                          M     if (((PORTC) > BANKA_END) & ((PORTC) < 0f80h))
                          M       if (((PORTC) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (PORTC) >> 8
                          M PREV_BANK = (PORTC) >> 8
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PORTC,  006h
                          M     else
000034 9C82               M         bcf     PORTC,  006h
                          M     endif
                      00104         MOVE?CT 000h, _PORTC_7
                          M         CHK?RP  PORTC
                          M     if (((PORTC) > BANKA_END) & ((PORTC) < 0f80h))
                          M       if (((PORTC) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (PORTC) >> 8
                          M PREV_BANK = (PORTC) >> 8
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PORTC,  007h
                          M     else
000036 9E82               M         bcf     PORTC,  007h
                          M     endif
                      00105         MOVE?CT 000h, _PORTD_0
                          M         CHK?RP  PORTD
                          M     if (((PORTD) > BANKA_END) & ((PORTD) < 0f80h))
                          M       if (((PORTD) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (PORTD) >> 8
                          M PREV_BANK = (PORTD) >> 8
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PORTD,  000h
MPASM 03.60.02 Released                             PROVA.ASM   1-26-2005  19:42:01         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     else
000038 9083               M         bcf     PORTD,  000h
                          M     endif
                      00106         MOVE?CT 000h, _PORTD_1
                          M         CHK?RP  PORTD
                          M     if (((PORTD) > BANKA_END) & ((PORTD) < 0f80h))
                          M       if (((PORTD) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (PORTD) >> 8
                          M PREV_BANK = (PORTD) >> 8
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PORTD,  001h
                          M     else
00003A 9283               M         bcf     PORTD,  001h
                          M     endif
                      00107         MOVE?CT 000h, _PORTD_2
                          M         CHK?RP  PORTD
                          M     if (((PORTD) > BANKA_END) & ((PORTD) < 0f80h))
                          M       if (((PORTD) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (PORTD) >> 8
                          M PREV_BANK = (PORTD) >> 8
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PORTD,  002h
                          M     else
00003C 9483               M         bcf     PORTD,  002h
                          M     endif
                      00108         MOVE?CT 000h, _PORTD_3
                          M         CHK?RP  PORTD
                          M     if (((PORTD) > BANKA_END) & ((PORTD) < 0f80h))
                          M       if (((PORTD) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (PORTD) >> 8
                          M PREV_BANK = (PORTD) >> 8
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PORTD,  003h
                          M     else
00003E 9683               M         bcf     PORTD,  003h
                          M     endif
                      00109         MOVE?CT 000h, _PORTD_4
                          M         CHK?RP  PORTD
                          M     if (((PORTD) > BANKA_END) & ((PORTD) < 0f80h))
                          M       if (((PORTD) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (PORTD) >> 8
                          M PREV_BANK = (PORTD) >> 8
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PORTD,  004h
                          M     else
MPASM 03.60.02 Released                             PROVA.ASM   1-26-2005  19:42:01         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000040 9883               M         bcf     PORTD,  004h
                          M     endif
                      00110         MOVE?CT 000h, _PORTD_5
                          M         CHK?RP  PORTD
                          M     if (((PORTD) > BANKA_END) & ((PORTD) < 0f80h))
                          M       if (((PORTD) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (PORTD) >> 8
                          M PREV_BANK = (PORTD) >> 8
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PORTD,  005h
                          M     else
000042 9A83               M         bcf     PORTD,  005h
                          M     endif
                      00111         MOVE?CT 000h, _PORTD_6
                          M         CHK?RP  PORTD
                          M     if (((PORTD) > BANKA_END) & ((PORTD) < 0f80h))
                          M       if (((PORTD) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (PORTD) >> 8
                          M PREV_BANK = (PORTD) >> 8
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PORTD,  006h
                          M     else
000044 9C83               M         bcf     PORTD,  006h
                          M     endif
                      00112         MOVE?CT 000h, _PORTD_7
                          M         CHK?RP  PORTD
                          M     if (((PORTD) > BANKA_END) & ((PORTD) < 0f80h))
                          M       if (((PORTD) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (PORTD) >> 8
                          M PREV_BANK = (PORTD) >> 8
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PORTD,  007h
                          M     else
000046 9E83               M         bcf     PORTD,  007h
                          M     endif
                      00113         MOVE?CT 000h, _PORTE_0
                          M         CHK?RP  PORTE
                          M     if (((PORTE) > BANKA_END) & ((PORTE) < 0f80h))
                          M       if (((PORTE) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (PORTE) >> 8
                          M PREV_BANK = (PORTE) >> 8
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PORTE,  000h
                          M     else
000048 9084               M         bcf     PORTE,  000h
MPASM 03.60.02 Released                             PROVA.ASM   1-26-2005  19:42:01         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                      00114         MOVE?CT 000h, _PORTE_1
                          M         CHK?RP  PORTE
                          M     if (((PORTE) > BANKA_END) & ((PORTE) < 0f80h))
                          M       if (((PORTE) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (PORTE) >> 8
                          M PREV_BANK = (PORTE) >> 8
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PORTE,  001h
                          M     else
00004A 9284               M         bcf     PORTE,  001h
                          M     endif
                      00115         MOVE?CT 000h, _PORTE_2
                          M         CHK?RP  PORTE
                          M     if (((PORTE) > BANKA_END) & ((PORTE) < 0f80h))
                          M       if (((PORTE) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (PORTE) >> 8
                          M PREV_BANK = (PORTE) >> 8
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PORTE,  002h
                          M     else
00004C 9484               M         bcf     PORTE,  002h
                          M     endif
                      00116 
Warning[207]: Found label after column 1. (LABEL?L)
Error[122]  : Illegal opcode (_LOOP)
                      00117         LABEL?L _LOOP   
                      00118         MOVE?CB 001h, _TEMP
                          M         CHK?RP  _TEMP
                          M     if (((_TEMP) > BANKA_END) & ((_TEMP) < 0f80h))
                          M       if (((_TEMP) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (_TEMP) >> 8
                          M PREV_BANK = (_TEMP) >> 8
                          M       endif
                          M     endif
                          M     if (low (001h) == 0)
                          M         clrf    _TEMP
                          M     else
00004E 0E01               M         movlw   low (001h)
000050 6E1B               M         movwf   _TEMP
                          M     endif
                      00119         MOVE?CB 000h, _CONTA
                          M         CHK?RP  _CONTA
                          M     if (((_CONTA) > BANKA_END) & ((_CONTA) < 0f80h))
                          M       if (((_CONTA) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (_CONTA) >> 8
                          M PREV_BANK = (_CONTA) >> 8
                          M       endif
                          M     endif
MPASM 03.60.02 Released                             PROVA.ASM   1-26-2005  19:42:01         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (low (000h) == 0)
000052 6A1A               M         clrf    _CONTA
                          M     else
                          M         movlw   low (000h)
                          M         movwf   _CONTA
                          M     endif
Warning[207]: Found label after column 1. (LABEL?L)
Error[122]  : Illegal opcode (L00001)
                      00120         LABEL?L L00001  
Warning[207]: Found label after column 1. (CMPGT?BCL)
Error[122]  : Illegal opcode (_CONTA)
                      00121         CMPGT?BCL       _CONTA, 003h, L00002
                      00122         MOVE?BB _TEMP, PORTA
000054 C01B FF80          M         movff   _TEMP, PORTA
Warning[207]: Found label after column 1. (PAUSE?C)
Error[108]  : Illegal character (0)
000054 C01B FF80      00123         PAUSE?C 007D0h
Warning[207]: Found label after column 1. (SHIFTL?BCB)
Error[122]  : Illegal opcode (_TEMP)
000054 C01B FF80      00124         SHIFTL?BCB      _TEMP, 001h, _TEMP
Warning[207]: Found label after column 1. (NEXT?BCL)
Error[122]  : Illegal opcode (_CONTA)
000054 C01B FF80      00125         NEXT?BCL        _CONTA, 001h, L00001
Warning[207]: Found label after column 1. (LABEL?L)
Error[122]  : Illegal opcode (L00002)
000054 C01B FF80      00126         LABEL?L L00002  
                      00127         MOVE?CT 000h, _PORTA_3
                          M         CHK?RP  PORTA
                          M     if (((PORTA) > BANKA_END) & ((PORTA) < 0f80h))
                          M       if (((PORTA) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (PORTA) >> 8
                          M PREV_BANK = (PORTA) >> 8
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PORTA,  003h
                          M     else
000058 9680               M         bcf     PORTA,  003h
                          M     endif
                      00128         MOVE?CT 001h, _PORTA_5
                          M         CHK?RP  PORTA
                          M     if (((PORTA) > BANKA_END) & ((PORTA) < 0f80h))
                          M       if (((PORTA) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (PORTA) >> 8
                          M PREV_BANK = (PORTA) >> 8
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
00005A 8A80               M         bsf     PORTA,  005h
                          M     else
                          M         bcf     PORTA,  005h
                          M     endif
Warning[207]: Found label after column 1. (PAUSE?C)
MPASM 03.60.02 Released                             PROVA.ASM   1-26-2005  19:42:01         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Error[108]  : Illegal character (0)
                      00129         PAUSE?C 007D0h
                      00130         MOVE?CT 000h, _PORTA_5
                          M         CHK?RP  PORTA
                          M     if (((PORTA) > BANKA_END) & ((PORTA) < 0f80h))
                          M       if (((PORTA) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (PORTA) >> 8
                          M PREV_BANK = (PORTA) >> 8
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PORTA,  005h
                          M     else
00005C 9A80               M         bcf     PORTA,  005h
                          M     endif
Warning[207]: Found label after column 1. (PAUSE?C)
Error[108]  : Illegal character (0)
                      00131         PAUSE?C 007D0h
                      00132         MOVE?CB 001h, _TEMP
                          M         CHK?RP  _TEMP
                          M     if (((_TEMP) > BANKA_END) & ((_TEMP) < 0f80h))
                          M       if (((_TEMP) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (_TEMP) >> 8
                          M PREV_BANK = (_TEMP) >> 8
                          M       endif
                          M     endif
                          M     if (low (001h) == 0)
                          M         clrf    _TEMP
                          M     else
00005E 0E01               M         movlw   low (001h)
000060 6E1B               M         movwf   _TEMP
                          M     endif
                      00133         MOVE?CB 000h, _CONTA
                          M         CHK?RP  _CONTA
                          M     if (((_CONTA) > BANKA_END) & ((_CONTA) < 0f80h))
                          M       if (((_CONTA) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (_CONTA) >> 8
                          M PREV_BANK = (_CONTA) >> 8
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
000062 6A1A               M         clrf    _CONTA
                          M     else
                          M         movlw   low (000h)
                          M         movwf   _CONTA
                          M     endif
Warning[207]: Found label after column 1. (LABEL?L)
Error[122]  : Illegal opcode (L00003)
                      00134         LABEL?L L00003  
Warning[207]: Found label after column 1. (CMPGT?BCL)
Error[122]  : Illegal opcode (_CONTA)
                      00135         CMPGT?BCL       _CONTA, 007h, L00004
                      00136         MOVE?BB _TEMP, PORTB
MPASM 03.60.02 Released                             PROVA.ASM   1-26-2005  19:42:01         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000064 C01B FF81          M         movff   _TEMP, PORTB
Warning[207]: Found label after column 1. (PAUSE?C)
Error[108]  : Illegal character (0)
000064 C01B FF81      00137         PAUSE?C 007D0h
Warning[207]: Found label after column 1. (SHIFTL?BCB)
Error[122]  : Illegal opcode (_TEMP)
000064 C01B FF81      00138         SHIFTL?BCB      _TEMP, 001h, _TEMP
Warning[207]: Found label after column 1. (NEXT?BCL)
Error[122]  : Illegal opcode (_CONTA)
000064 C01B FF81      00139         NEXT?BCL        _CONTA, 001h, L00003
Warning[207]: Found label after column 1. (LABEL?L)
Error[122]  : Illegal opcode (L00004)
000064 C01B FF81      00140         LABEL?L L00004  
                      00141         MOVE?CT 000h, _PORTB_7
                          M         CHK?RP  PORTB
                          M     if (((PORTB) > BANKA_END) & ((PORTB) < 0f80h))
                          M       if (((PORTB) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (PORTB) >> 8
                          M PREV_BANK = (PORTB) >> 8
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PORTB,  007h
                          M     else
000068 9E81               M         bcf     PORTB,  007h
                          M     endif
Warning[207]: Found label after column 1. (PAUSE?C)
Error[108]  : Illegal character (0)
                      00142         PAUSE?C 007D0h
                      00143         MOVE?CB 001h, _TEMP
                          M         CHK?RP  _TEMP
                          M     if (((_TEMP) > BANKA_END) & ((_TEMP) < 0f80h))
                          M       if (((_TEMP) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (_TEMP) >> 8
                          M PREV_BANK = (_TEMP) >> 8
                          M       endif
                          M     endif
                          M     if (low (001h) == 0)
                          M         clrf    _TEMP
                          M     else
00006A 0E01               M         movlw   low (001h)
00006C 6E1B               M         movwf   _TEMP
                          M     endif
                      00144         MOVE?CB 000h, _CONTA
                          M         CHK?RP  _CONTA
                          M     if (((_CONTA) > BANKA_END) & ((_CONTA) < 0f80h))
                          M       if (((_CONTA) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (_CONTA) >> 8
                          M PREV_BANK = (_CONTA) >> 8
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
00006E 6A1A               M         clrf    _CONTA
MPASM 03.60.02 Released                             PROVA.ASM   1-26-2005  19:42:01         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     else
                          M         movlw   low (000h)
                          M         movwf   _CONTA
                          M     endif
Warning[207]: Found label after column 1. (LABEL?L)
Error[122]  : Illegal opcode (L00005)
                      00145         LABEL?L L00005  
Warning[207]: Found label after column 1. (CMPGT?BCL)
Error[122]  : Illegal opcode (_CONTA)
                      00146         CMPGT?BCL       _CONTA, 007h, L00006
                      00147         MOVE?BB _TEMP, PORTC
000070 C01B FF82          M         movff   _TEMP, PORTC
Warning[207]: Found label after column 1. (PAUSE?C)
Error[108]  : Illegal character (0)
000070 C01B FF82      00148         PAUSE?C 007D0h
Warning[207]: Found label after column 1. (SHIFTL?BCB)
Error[122]  : Illegal opcode (_TEMP)
000070 C01B FF82      00149         SHIFTL?BCB      _TEMP, 001h, _TEMP
Warning[207]: Found label after column 1. (NEXT?BCL)
Error[122]  : Illegal opcode (_CONTA)
000070 C01B FF82      00150         NEXT?BCL        _CONTA, 001h, L00005
Warning[207]: Found label after column 1. (LABEL?L)
Error[122]  : Illegal opcode (L00006)
000070 C01B FF82      00151         LABEL?L L00006  
                      00152         MOVE?CT 000h, _PORTC_7
                          M         CHK?RP  PORTC
                          M     if (((PORTC) > BANKA_END) & ((PORTC) < 0f80h))
                          M       if (((PORTC) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (PORTC) >> 8
                          M PREV_BANK = (PORTC) >> 8
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PORTC,  007h
                          M     else
000074 9E82               M         bcf     PORTC,  007h
                          M     endif
Warning[207]: Found label after column 1. (PAUSE?C)
Error[108]  : Illegal character (0)
                      00153         PAUSE?C 007D0h
                      00154         MOVE?CB 001h, _TEMP
                          M         CHK?RP  _TEMP
                          M     if (((_TEMP) > BANKA_END) & ((_TEMP) < 0f80h))
                          M       if (((_TEMP) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (_TEMP) >> 8
                          M PREV_BANK = (_TEMP) >> 8
                          M       endif
                          M     endif
                          M     if (low (001h) == 0)
                          M         clrf    _TEMP
                          M     else
000076 0E01               M         movlw   low (001h)
000078 6E1B               M         movwf   _TEMP
MPASM 03.60.02 Released                             PROVA.ASM   1-26-2005  19:42:01         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                      00155         MOVE?CB 000h, _CONTA
                          M         CHK?RP  _CONTA
                          M     if (((_CONTA) > BANKA_END) & ((_CONTA) < 0f80h))
                          M       if (((_CONTA) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (_CONTA) >> 8
                          M PREV_BANK = (_CONTA) >> 8
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
00007A 6A1A               M         clrf    _CONTA
                          M     else
                          M         movlw   low (000h)
                          M         movwf   _CONTA
                          M     endif
Warning[207]: Found label after column 1. (LABEL?L)
Error[122]  : Illegal opcode (L00007)
                      00156         LABEL?L L00007  
Warning[207]: Found label after column 1. (CMPGT?BCL)
Error[122]  : Illegal opcode (_CONTA)
                      00157         CMPGT?BCL       _CONTA, 007h, L00008
                      00158         MOVE?BB _TEMP, PORTD
00007C C01B FF83          M         movff   _TEMP, PORTD
Warning[207]: Found label after column 1. (PAUSE?C)
Error[108]  : Illegal character (0)
00007C C01B FF83      00159         PAUSE?C 007D0h
Warning[207]: Found label after column 1. (SHIFTL?BCB)
Error[122]  : Illegal opcode (_TEMP)
00007C C01B FF83      00160         SHIFTL?BCB      _TEMP, 001h, _TEMP
Warning[207]: Found label after column 1. (NEXT?BCL)
Error[122]  : Illegal opcode (_CONTA)
00007C C01B FF83      00161         NEXT?BCL        _CONTA, 001h, L00007
Warning[207]: Found label after column 1. (LABEL?L)
Error[122]  : Illegal opcode (L00008)
00007C C01B FF83      00162         LABEL?L L00008  
                      00163         MOVE?CT 000h, _PORTD_7
                          M         CHK?RP  PORTD
                          M     if (((PORTD) > BANKA_END) & ((PORTD) < 0f80h))
                          M       if (((PORTD) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (PORTD) >> 8
                          M PREV_BANK = (PORTD) >> 8
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PORTD,  007h
                          M     else
000080 9E83               M         bcf     PORTD,  007h
                          M     endif
Warning[207]: Found label after column 1. (PAUSE?C)
Error[108]  : Illegal character (0)
                      00164         PAUSE?C 007D0h
                      00165         MOVE?CB 001h, _TEMP
                          M         CHK?RP  _TEMP
MPASM 03.60.02 Released                             PROVA.ASM   1-26-2005  19:42:01         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (((_TEMP) > BANKA_END) & ((_TEMP) < 0f80h))
                          M       if (((_TEMP) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (_TEMP) >> 8
                          M PREV_BANK = (_TEMP) >> 8
                          M       endif
                          M     endif
                          M     if (low (001h) == 0)
                          M         clrf    _TEMP
                          M     else
000082 0E01               M         movlw   low (001h)
000084 6E1B               M         movwf   _TEMP
                          M     endif
                      00166         MOVE?CB 000h, _CONTA
                          M         CHK?RP  _CONTA
                          M     if (((_CONTA) > BANKA_END) & ((_CONTA) < 0f80h))
                          M       if (((_CONTA) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (_CONTA) >> 8
                          M PREV_BANK = (_CONTA) >> 8
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
000086 6A1A               M         clrf    _CONTA
                          M     else
                          M         movlw   low (000h)
                          M         movwf   _CONTA
                          M     endif
Warning[207]: Found label after column 1. (LABEL?L)
Error[122]  : Illegal opcode (L00009)
                      00167         LABEL?L L00009  
Warning[207]: Found label after column 1. (CMPGT?BCL)
Error[122]  : Illegal opcode (_CONTA)
                      00168         CMPGT?BCL       _CONTA, 002h, L00010
                      00169         MOVE?BB _TEMP, PORTE
000088 C01B FF84          M         movff   _TEMP, PORTE
Warning[207]: Found label after column 1. (PAUSE?C)
Error[108]  : Illegal character (0)
000088 C01B FF84      00170         PAUSE?C 007D0h
Warning[207]: Found label after column 1. (SHIFTL?BCB)
Error[122]  : Illegal opcode (_TEMP)
000088 C01B FF84      00171         SHIFTL?BCB      _TEMP, 001h, _TEMP
Warning[207]: Found label after column 1. (NEXT?BCL)
Error[122]  : Illegal opcode (_CONTA)
000088 C01B FF84      00172         NEXT?BCL        _CONTA, 001h, L00009
Warning[207]: Found label after column 1. (LABEL?L)
Error[122]  : Illegal opcode (L00010)
000088 C01B FF84      00173         LABEL?L L00010  
                      00174         MOVE?CT 000h, _PORTE_2
                          M         CHK?RP  PORTE
                          M     if (((PORTE) > BANKA_END) & ((PORTE) < 0f80h))
                          M       if (((PORTE) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   (PORTE) >> 8
                          M PREV_BANK = (PORTE) >> 8
                          M       endif
MPASM 03.60.02 Released                             PROVA.ASM   1-26-2005  19:42:01         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PORTE,  002h
                          M     else
00008C 9484               M         bcf     PORTE,  002h
                          M     endif
Warning[207]: Found label after column 1. (PAUSE?C)
Error[108]  : Illegal character (0)
                      00175         PAUSE?C 007D0h
Warning[207]: Found label after column 1. (GOTO?L)
Error[122]  : Illegal opcode (_LOOP)
                      00176         GOTO?L  _LOOP
                      00177 
                      00178         END
MPASM 03.60.02 Released                             PROVA.ASM   1-26-2005  19:42:01         PAGE 20


SYMBOL TABLE
  LABEL                             VALUE 

A                                 00000000
ACCESS                            00000000
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ACQT0                             00000003
ACQT1                             00000004
ACQT2                             00000005
ADCON0                            00000FC2
ADCON1                            00000FC1
ADCON2                            00000FC0
ADCS0                             00000000
ADCS1                             00000001
ADCS2                             00000002
ADC_BITS                          00000008
ADC_CLOCK                         00000003
ADC_SAMPLEUS                      00000032
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADIP                              00000006
ADON                              00000000
ADRES                             ADRESH
ADRESH                            00000FC4
ADRESL                            00000FC3
AN0                               00000000
AN1                               00000001
AN10                              00000001
AN11                              00000004
AN12                              00000000
AN2                               00000002
AN3                               00000003
AN4                               00000005
AN5                               00000000
AN6                               00000001
AN7                               00000002
AN8                               00000002
AN9                               00000003
BANK0_END                         000000FF
BANK0_START                       00000080
BANK1_END                         000001FF
BANK1_START                       00000100
BANKA_END                         0000007F
BANKA_START                       00000000
BANKED                            00000001
BCLIE                             00000003
BCLIF                             00000003
BCLIP                             00000003
BF                                00000000
BIT?FLIP                          
BIT?GOTO                          
BIT?R1                            
MPASM 03.60.02 Released                             PROVA.ASM   1-26-2005  19:42:01         PAGE 21


SYMBOL TABLE
  LABEL                             VALUE 

BIT?R2                            
BIT?W                             
BLOCK_SIZE                        00000008
BOR                               00000000
BRGH                              00000002
BSR                               00000FE0
BUTTON_PAUSE                      0000000A
C                                 00000000
C1INV                             00000004
C1OUT                             00000006
C2INV                             00000005
C2OUT                             00000007
CCP1                              00000002
CCP1CON                           00000FBD
CCP1IE                            00000002
CCP1IF                            00000002
CCP1IP                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             DC1B1
CCP1Y                             DC1B0
CCP1_BIT                          00000002
CCP1_REG                          00000F82
CCP2                              00000001
CCP2A                             00000003
CCP2CON                           00000FBA
CCP2IE                            00000000
CCP2IF                            00000000
CCP2IP                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             DC2B1
CCP2Y                             DC2B0
CCP2_BIT                          00000001
CCP2_REG                          00000F82
CCPR1H                            00000FBF
CCPR1L                            00000FBE
CCPR2H                            00000FBC
CCPR2L                            00000FBB
CFGS                              00000006
CHK?RP                            
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CIS                               00000003
CK                                00000006
CKE                               00000006
CKP                               00000004
MPASM 03.60.02 Released                             PROVA.ASM   1-26-2005  19:42:01         PAGE 22


SYMBOL TABLE
  LABEL                             VALUE 

CLKI                              00000007
CLKO                              00000006
CLRWDT?                           
CLRWDT?NOP                        
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             00000FB4
CMIE                              00000006
CMIF                              00000006
CMIP                              00000006
CREN                              00000004
CS                                00000002
CSRC                              00000007
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
CVR3                              00000003
CVRCON                            00000FB5
CVREN                             00000007
CVROE                             00000006
CVRR                              00000005
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DC2B0                             00000004
DC2B1                             00000005
DDRA                              TRISA
DDRB                              TRISB
DDRC                              TRISC
DDRD                              TRISD
DDRE                              TRISE
DEBUGIN_BIT                       00000000
DEBUGIN_MODE                      00000001
DEBUGIN_REG                       00000F81
DEBUG_BAUD                        00000960
DEBUG_BIT                         00000000
DEBUG_DELAY                       0000019E
DEBUG_MODE                        00000001
DEBUG_REG                         00000F81
DONE                              00000001
D_A                               00000005
ECCPAS                            00000FB6
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
EEADR                             00000FA9
EECON1                            00000FA6
EECON2                            00000FA7
EEDATA                            00000FA8
MPASM 03.60.02 Released                             PROVA.ASM   1-26-2005  19:42:01         PAGE 23


SYMBOL TABLE
  LABEL                             VALUE 

EEIE                              00000004
EEIF                              00000004
EEIP                              00000004
EEPGD                             00000007
EEPROM_START                      00F00000
FAST                              00000001
FERR                              00000002
FLAGS                             00000012
FLTS                              00000002
FREE                              00000004
FSR0                              00000000
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1                              00000001
FSR1H                             00000FE2
FSR1L                             00000FE1
FSR2                              00000002
FSR2H                             00000FDA
FSR2L                             00000FD9
GCEN                              00000007
GIE                               00000007
GIEH                              00000007
GIEL                              00000006
GO                                00000001
GOP                               00000013
GO_DONE                           00000001
HSER2_BAUD                        00000960
HSER2_BITS                        00000008
HSER2_RCSTA                       00000090
HSER2_SPBRG                       00000081
HSER2_TXSTA                       00000020
HSER_BAUD                         00000960
HSER_BITS                         00000008
HSER_PORT                         00000001
HSER_RCSTA                        00000090
HSER_SPBRG                        00000081
HSER_TXSTA                        00000020
I2CFIRSTFLAG                      FLAGS, 2
I2CREADFLAG                       FLAGS, 3
I2CSTOPFLAG                       FLAGS, 5
I2CSTOPSTRFLAG                    FLAGS, 6
I2CWRITEFLAG                      FLAGS, 4
I2C_DAT                           00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
IDLEN                             00000007
INDF0                             00000FEF
INDF1                             00000FE7
INDF2                             00000FDF
INIT                              00000004
MPASM 03.60.02 Released                             PROVA.ASM   1-26-2005  19:42:01         PAGE 24


SYMBOL TABLE
  LABEL                             VALUE 

INT0                              00000000
INT0IE                            00000004
INT0IF                            00000001
INT1                              00000001
INT1IE                            00000003
INT1IF                            00000000
INT1IP                            00000006
INT2                              00000002
INT2IE                            00000004
INT2IF                            00000001
INT2IP                            00000007
INTCON                            00000FF2
INTCON2                           00000FF1
INTCON3                           00000FF0
INTE                              INT0IE
INTEDG0                           00000006
INTEDG1                           00000005
INTEDG2                           00000004
INTF                              INT0IF
IOFS                              00000002
IPEN                              00000007
IPR1                              00000F9F
IPR2                              00000FA2
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRVST                             00000005
L?CALL                            
L?GOTO                            
LATA                              00000F89
LATB                              00000F8A
LATC                              00000F8B
LATD                              00000F8C
LATE                              00000F8D
LCDCDFLAG                         FLAGS, 0
LCDINITFLAG                       FLAGS, 1
LCD_BITS                          00000004
LCD_COMMANDUS                     000007D0
LCD_DATAUS                        00000032
LCD_DBIT                          00000000
LCD_DREG                          00000F80
LCD_EBIT                          00000003
LCD_EREG                          00000F81
LCD_LINES                         00000002
LCD_RSBIT                         00000004
LCD_RSREG                         00000F80
LCD_RWBIT                         00000004
LCD_RWREG                         00000F80
LVDCON                            00000FD2
LVDEN                             00000004
LVDIE                             00000002
LVDIF                             00000002
LVDIN                             00000005
MPASM 03.60.02 Released                             PROVA.ASM   1-26-2005  19:42:01         PAGE 25


SYMBOL TABLE
  LABEL                             VALUE 

LVDIP                             00000002
LVDL0                             00000000
LVDL1                             00000001
LVDL2                             00000002
LVDL3                             00000003
MCLR                              00000003
MOVE?AB                           
MOVE?AT                           
MOVE?AW                           
MOVE?AWW                          
MOVE?BA                           
MOVE?BB                           
MOVE?BT                           
MOVE?BW                           
MOVE?CA                           
MOVE?CB                           
MOVE?CT                           
MOVE?CW                           
MOVE?TA                           
MOVE?TB                           
MOVE?TT                           
MOVE?TW                           
MOVE?WA                           
MOVE?WB                           
MOVE?WT                           
MOVE?WW                           
MOVE?WWA                          
N                                 00000004
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000002
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RI                            00000004
NOT_T1SYNC                        00000002
NOT_T3SYNC                        00000002
NOT_TO                            00000003
NOT_W                             00000002
NOT_WRITE                         00000002
OBF                               00000006
OERR                              00000001
OSC                               20
OSC1                              00000007
OSC2                              00000006
OSCCON                            00000FD3
OSCFIE                            00000007
OSCFIF                            00000007
OSCFIP                            00000007
OSCTUNE                           00000F9B
OSTS                              00000003
OV                                00000003
MPASM 03.60.02 Released                             PROVA.ASM   1-26-2005  19:42:01         PAGE 26


SYMBOL TABLE
  LABEL                             VALUE 

P                                 00000004
P1A                               00000002
P1B                               00000005
P1C                               00000006
P1D                               00000007
P1M0                              00000006
P1M1                              00000007
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PD                                00000002
PDC0                              00000000
PDC1                              00000001
PDC2                              00000002
PDC3                              00000003
PDC4                              00000004
PDC5                              00000005
PDC6                              00000006
PEIE                              00000006
PEN                               00000002
PIE1                              00000F9D
PIE2                              00000FA0
PIR                               00000F9E
PIR1                              00000F9E
PIR2                              00000FA1
PLUSW0                            00000FEB
PLUSW1                            00000FE3
PLUSW2                            00000FDB
POR                               00000001
PORTA                             00000F80
PORTB                             00000F81
PORTC                             00000F82
PORTD                             00000F83
PORTE                             00000F84
POSTDEC0                          00000FED
POSTDEC1                          00000FE5
POSTDEC2                          00000FDD
POSTINC0                          00000FEE
POSTINC1                          00000FE6
POSTINC2                          00000FDE
PR2                               00000FCB
PREINC0                           00000FEC
PREINC1                           00000FE4
PREINC2                           00000FDC
PREV_BANK                         00000000
PRODH                             00000FF4
PRODL                             00000FF3
PRSEN                             00000007
PSA                               00000003
MPASM 03.60.02 Released                             PROVA.ASM   1-26-2005  19:42:01         PAGE 27


SYMBOL TABLE
  LABEL                             VALUE 

PSP0                              00000000
PSP1                              00000001
PSP2                              00000002
PSP3                              00000003
PSP4                              00000004
PSP5                              00000005
PSP6                              00000006
PSP7                              00000007
PSPIE                             00000007
PSPIF                             00000007
PSPIP                             00000007
PSPMODE                           00000004
PSSAC0                            00000002
PSSAC1                            00000003
PSSBD0                            00000000
PSSBD1                            00000001
PWM1CON                           00000FB7
R                                 00000002
R0                                00000000
R1                                00000002
R2                                00000004
R3                                00000006
R4                                00000008
R5                                0000000A
R6                                0000000C
R7                                0000000E
R8                                00000010
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RA6                               00000006
RA7                               00000007
RAM_BANKS                         00000002
RAM_END                           000001FF
RAM_START                         00000000
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RBIP                              00000000
RBPU                              00000007
RC0                               00000000
RC1                               00000001
RC2                               00000002
MPASM 03.60.02 Released                             PROVA.ASM   1-26-2005  19:42:01         PAGE 28


SYMBOL TABLE
  LABEL                             VALUE 

RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCIP                              00000005
RCON                              00000FD0
RCREG                             00000FAE
RCSTA                             00000FAB
RD                                00000000
RD0                               00000000
RD1                               00000001
RD16                              00000007
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
RE3                               00000003
READ_WRITE                        00000002
RI                                00000004
RM1                               00000014
RM2                               00000015
RR1                               00000016
RR2                               00000017
RS1                               00000018
RS2                               00000019
RSEN                              00000001
RST?RP                            
RX                                00000007
RX9                               00000006
RX9D                              00000000
R_W                               00000002
S                                 00000003
SCK                               00000003
SCL                               00000003
SCS                               SCS0
SCS0                              00000000
SCS1                              00000001
SDA                               00000004
SDI                               00000004
SDO                               00000005
SEN                               00000000
SMP                               00000007
SPBRG                             00000FAF
SPEN                              00000007
MPASM 03.60.02 Released                             PROVA.ASM   1-26-2005  19:42:01         PAGE 29


SYMBOL TABLE
  LABEL                             VALUE 

SREN                              00000005
SS                                00000005
SSPADD                            00000FC8
SSPBUF                            00000FC9
SSPCON1                           00000FC6
SSPCON2                           00000FC5
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPIP                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000FC7
STATUS                            00000FD8
STKFUL                            00000007
STKPTR                            00000FFC
STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
T08BIT                            00000006
T0CKI                             00000004
T0CON                             00000FD5
T0CS                              00000005
T0IP                              00000002
T0PS0                             00000000
T0PS1                             00000001
T0PS2                             00000002
T0SE                              00000004
T1CKI                             00000000
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000FCD
T1OSCEN                           00000003
T1OSI                             00000001
T1OSO                             00000000
T1RUN                             00000006
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000FCA
T3CCP1                            00000003
T3CCP2                            00000006
T3CKPS0                           00000004
T3CKPS1                           00000005
T3CON                             00000FB1
T3SYNC                            00000002
TABLAT                            00000FF5
TABLE?C                           
TBLPTRH                           00000FF7
TBLPTRL                           00000FF6
MPASM 03.60.02 Released                             PROVA.ASM   1-26-2005  19:42:01         PAGE 30


SYMBOL TABLE
  LABEL                             VALUE 

TBLPTRU                           00000FF8
TMR0H                             00000FD7
TMR0IE                            00000005
TMR0IF                            00000002
TMR0IP                            00000002
TMR0L                             00000FD6
TMR0ON                            00000007
TMR1CS                            00000001
TMR1H                             00000FCF
TMR1IE                            00000000
TMR1IF                            00000000
TMR1IP                            00000000
TMR1L                             00000FCE
TMR1ON                            00000000
TMR2                              00000FCC
TMR2IE                            00000001
TMR2IF                            00000001
TMR2IP                            00000001
TMR2ON                            00000002
TMR3CS                            00000001
TMR3H                             00000FB3
TMR3IE                            00000001
TMR3IF                            00000001
TMR3IP                            00000001
TMR3L                             00000FB2
TMR3ON                            00000000
TO                                00000003
TOSH                              00000FFE
TOSL                              00000FFD
TOSU                              00000FFF
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000F92
TRISB                             00000F93
TRISC                             00000F94
TRISD                             00000F95
TRISE                             00000F96
TRMT                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX                                00000006
TX9                               00000006
TX9D                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXIP                              00000004
MPASM 03.60.02 Released                             PROVA.ASM   1-26-2005  19:42:01         PAGE 31


SYMBOL TABLE
  LABEL                             VALUE 

TXREG                             00000FAD
TXSTA                             00000FAC
UA                                00000001
VCFG0                             00000004
VCFG1                             00000005
VREFM                             00000002
VREFP                             00000003
W                                 00000000
WCOL                              00000007
WDTCON                            00000FD1
WR                                00000001
WREG                              00000FE8
WREN                              00000002
WRERR                             00000003
Z                                 00000002
_BORV_20_2L                       000000FF
_BORV_27_2L                       000000FB
_BORV_42_2L                       000000F7
_BORV_45_2L                       000000F3
_BOR_OFF_2L                       000000FD
_BOR_ON_2L                        000000FF
_CCP2MX_B3_3H                     000000FE
_CCP2MX_C1_3H                     000000FF
_CCP2MX_OFF_3H                    000000FE
_CCP2MX_ON_3H                     000000FF
_CONFIG1H                         00300001
_CONFIG2H                         00300003
_CONFIG2L                         00300002
_CONFIG3H                         00300005
_CONFIG4L                         00300006
_CONFIG5H                         00300009
_CONFIG5L                         00300008
_CONFIG6H                         0030000B
_CONFIG6L                         0030000A
_CONFIG7H                         0030000D
_CONFIG7L                         0030000C
_CONTA                            0000001A
_CP0_OFF_5L                       000000FF
_CP0_ON_5L                        000000FE
_CP1_OFF_5L                       000000FF
_CP1_ON_5L                        000000FD
_CP2_OFF_5L                       000000FF
_CP2_ON_5L                        000000FB
_CP3_OFF_5L                       000000FF
_CP3_ON_5L                        000000F7
_CPB_OFF_5H                       000000FF
_CPB_ON_5H                        000000BF
_CPD_OFF_5H                       000000FF
_CPD_ON_5H                        0000007F
_DEBUG_OFF_4L                     000000FF
_DEBUG_ON_4L                      0000007F
_DEVID1                           003FFFFE
_DEVID2                           003FFFFF
MPASM 03.60.02 Released                             PROVA.ASM   1-26-2005  19:42:01         PAGE 32


SYMBOL TABLE
  LABEL                             VALUE 

_EBTR0_OFF_7L                     000000FF
_EBTR0_ON_7L                      000000FE
_EBTR1_OFF_7L                     000000FF
_EBTR1_ON_7L                      000000FD
_EBTR2_OFF_7L                     000000FF
_EBTR2_ON_7L                      000000FB
_EBTR3_OFF_7L                     000000FF
_EBTR3_ON_7L                      000000F7
_EBTRB_OFF_7H                     000000FF
_EBTRB_ON_7H                      000000BF
_ECIO_OSC_1H                      000000F5
_EC_OSC_1H                        000000F4
_FSCM_OFF_1H                      000000BF
_FSCM_ON_1H                       000000FF
_HSPLL_OSC_1H                     000000F6
_HS_OSC_1H                        000000F2
_IDLOC0                           00200000
_IDLOC1                           00200001
_IDLOC2                           00200002
_IDLOC3                           00200003
_IDLOC4                           00200004
_IDLOC5                           00200005
_IDLOC6                           00200006
_IDLOC7                           00200007
_IESO_OFF_1H                      0000007F
_IESO_ON_1H                       000000FF
_INTIO1_OSC_1H                    000000F9
_INTIO2_OSC_1H                    000000F8
_LP_OSC_1H                        000000F0
_LVP_OFF_4L                       000000FB
_LVP_ON_4L                        000000FF
_MCLRE_OFF_3H                     0000007F
_MCLRE_ON_3H                      000000FF
_PBAD_ANA_3H                      000000FF
_PBAD_DIG_3H                      000000FD
_PORTA_0                          PORTA, 000h
_PORTA_1                          PORTA, 001h
_PORTA_2                          PORTA, 002h
_PORTA_3                          PORTA, 003h
_PORTA_5                          PORTA, 005h
_PORTB_0                          PORTB, 000h
_PORTB_1                          PORTB, 001h
_PORTB_2                          PORTB, 002h
_PORTB_3                          PORTB, 003h
_PORTB_4                          PORTB, 004h
_PORTB_5                          PORTB, 005h
_PORTB_6                          PORTB, 006h
_PORTB_7                          PORTB, 007h
_PORTC_0                          PORTC, 000h
_PORTC_1                          PORTC, 001h
_PORTC_2                          PORTC, 002h
_PORTC_3                          PORTC, 003h
_PORTC_4                          PORTC, 004h
MPASM 03.60.02 Released                             PROVA.ASM   1-26-2005  19:42:01         PAGE 33


SYMBOL TABLE
  LABEL                             VALUE 

_PORTC_5                          PORTC, 005h
_PORTC_6                          PORTC, 006h
_PORTC_7                          PORTC, 007h
_PORTD_0                          PORTD, 000h
_PORTD_1                          PORTD, 001h
_PORTD_2                          PORTD, 002h
_PORTD_3                          PORTD, 003h
_PORTD_4                          PORTD, 004h
_PORTD_5                          PORTD, 005h
_PORTD_6                          PORTD, 006h
_PORTD_7                          PORTD, 007h
_PORTE_0                          PORTE, 000h
_PORTE_1                          PORTE, 001h
_PORTE_2                          PORTE, 002h
_PORTH                            00000F82
_PORTL                            00000F81
_PWRT_OFF_2L                      000000FF
_PWRT_ON_2L                       000000FE
_RCIO_OSC_1H                      000000F7
_RC_OSC_1H                        000000FF
_STVR_OFF_4L                      000000FE
_STVR_ON_4L                       000000FF
_TEMP                             0000001B
_TRISH                            00000F94
_TRISL                            00000F93
_USED                             00000001
_WDTPS_128_2H                     000000EF
_WDTPS_16K_2H                     000000FD
_WDTPS_16_2H                      000000E9
_WDTPS_1K_2H                      000000F5
_WDTPS_1_2H                       000000E1
_WDTPS_256_2H                     000000F1
_WDTPS_2K_2H                      000000F7
_WDTPS_2_2H                       000000E3
_WDTPS_32K_2H                     000000FF
_WDTPS_32_2H                      000000EB
_WDTPS_4K_2H                      000000F9
_WDTPS_4_2H                       000000E5
_WDTPS_512_2H                     000000F3
_WDTPS_64_2H                      000000ED
_WDTPS_8K_2H                      000000FB
_WDTPS_8_2H                       000000E7
_WDT_OFF_2H                       000000FE
_WDT_ON_2H                        000000FF
_WRT0_OFF_6L                      000000FF
_WRT0_ON_6L                       000000FE
_WRT1_OFF_6L                      000000FF
_WRT1_ON_6L                       000000FD
_WRT2_OFF_6L                      000000FF
_WRT2_ON_6L                       000000FB
_WRT3_OFF_6L                      000000FF
_WRT3_ON_6L                       000000F7
_WRTB_OFF_6H                      000000FF
MPASM 03.60.02 Released                             PROVA.ASM   1-26-2005  19:42:01         PAGE 34


SYMBOL TABLE
  LABEL                             VALUE 

_WRTB_ON_6H                       000000BF
_WRTC_OFF_6H                      000000FF
_WRTC_ON_6H                       000000DF
_WRTD_OFF_6H                      000000FF
_WRTD_ON_6H                       0000007F
_XT_OSC_1H                        000000F1
__18F4320                         00000001
main                              00000004
rlf                               
rrf                               


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXX-- ---------------- ---------------- ----------------
0000 : XXXXXXXX-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Bytes Used:   150
Program Memory Bytes Free:  8042


Errors   :    39
Warnings :    38 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

